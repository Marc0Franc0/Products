/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.app.gui;

import com.app.dto.ProductDTO;
import com.app.model.Product;
import com.app.service.ProductService;
import com.app.service.ProductServiceImpl;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author marco
 */
public class Products extends javax.swing.JFrame {

    DefaultTableModel defaultTableModel = new DefaultTableModel();
    ProductService productService = new ProductServiceImpl();
    JOptionPane jOptionPane = new JOptionPane();
    List<Product> products = new ArrayList<>();

    /**
     * Creates new form Products
     */
    public Products() {
        initComponents();
        //Se centra el jframe
        this.setLocationRelativeTo(null);
        //Actualizacion de datos
        updateProductsTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableProducts = new javax.swing.JTable();
        brandInput = new javax.swing.JTextField();
        nameInput = new javax.swing.JTextField();
        amountInput = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel1.setText("Lista de productos");

        tableProducts.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        tableProducts.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tableProducts.setDoubleBuffered(true);
        tableProducts.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tableProducts.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableProductsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tableProducts);

        jLabel2.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        jLabel2.setText("Datos del producto");

        jLabel3.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel3.setText("Nombre");

        jLabel4.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel4.setText("Cantidad");

        jLabel5.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabel5.setText("Marca");

        btnSave.setText("Guardar");
        btnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSaveMouseClicked(evt);
            }
        });

        btnDelete.setText("Eliminar");
        btnDelete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnDeleteMouseClicked(evt);
            }
        });

        btnModify.setText("Modificar");
        btnModify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModifyMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(nameInput)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(amountInput)
                            .addComponent(jLabel5)
                            .addComponent(brandInput)
                            .addComponent(btnSave, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(btnModify, javax.swing.GroupLayout.DEFAULT_SIZE, 175, Short.MAX_VALUE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 78, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel4)
                        .addGap(18, 18, 18)
                        .addComponent(amountInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel5)
                        .addGap(18, 18, 18)
                        .addComponent(brandInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(btnSave)
                        .addGap(18, 18, 18)
                        .addComponent(btnModify)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)))
                .addContainerGap(89, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSaveMouseClicked

        try {
            //Creaci√≥n de objeto con los datos del producto ingresados 
            // y llamado al metodo del servicio para agregar el producto
            productService.addProduct(
                    ProductDTO.builder()
                            .name(nameInput.getText())
                            .amount(Integer.parseInt(amountInput.getText()))
                            .companyBrand(brandInput.getText())
                            .build());
            //Mensaje de creacion de creacion correcta
            jOptionPane.showMessageDialog(
                    null, "Producto creado",
                    "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            //Actualizacion de datos
            updateProductsTable();

        } catch (Exception e) {
            e.printStackTrace();
            jOptionPane.showMessageDialog(
                    null, "Verifique los datos ingresados",
                    "Error", JOptionPane.WARNING_MESSAGE);
        }


    }//GEN-LAST:event_btnSaveMouseClicked

    private void tableProductsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableProductsMouseClicked
        selectProduct(tableProducts, nameInput, amountInput, brandInput);
    }//GEN-LAST:event_tableProductsMouseClicked

    private void btnModifyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModifyMouseClicked
        int id = selectIdRow();
        try {

            //Creaci√≥n de objeto con los datos del producto ingresados 
            // y llamado al metodo del servicio para agregar el producto
            productService.modifyProduct(id,
                    ProductDTO.builder()
                            .name(nameInput.getText())
                            .amount(Integer.parseInt(amountInput.getText()))
                            .companyBrand(brandInput.getText())
                            .build());
            //Mensaje de creacion de creacion correcta
            jOptionPane.showMessageDialog(
                    null, "Producto con id '" + id
                    + "' modificado correctamente",
                    "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            //Actualizacion de datos
            updateProductsTable();

        } catch (Exception e) {
            e.printStackTrace();
            jOptionPane.showMessageDialog(
                    null, "Verifique los datos ingresados",
                    "Error", JOptionPane.WARNING_MESSAGE);
        }

    }//GEN-LAST:event_btnModifyMouseClicked

    private void btnDeleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnDeleteMouseClicked

        //Obtenci√≥n del id
        int id = selectIdRow();
        if (id >= 0) {
            //Llamado a m√©todo para elminacion del producto
            productService.removeProduct(id);
            //Actualizacion de datos
            updateProductsTable();
            jOptionPane.showMessageDialog(
                    null, "Producto eliminado correctamete",
                    "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }

    }//GEN-LAST:event_btnDeleteMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Products.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Products().setVisible(true);

            }
        });
    }

    public void showProducts(JTable tableProducts) {
        DefaultTableModel model = new DefaultTableModel();
        // TableRowSorter<TableModel> order = new TableRowSorter<TableModel>();
        // tableProducts.setRowSorter(order);

        //Columnas de la tabla
        model.addColumn("Id");
        model.addColumn("Nombre");
        model.addColumn("Cantidad");
        model.addColumn("Marca");
        //Se establece el modelo de la tabla
        tableProducts.setModel(model);

        //Mapeo de productos obtenidos
        for (Product product : products) {
            model.addRow(product.toArray());
        }

    }

    public void selectProduct(JTable tableProducts,
            JTextField nameInput, JTextField amountInput, JTextField brandInput) {
        try {
            //Fila seleccionada
            int row = tableProducts.getSelectedRow();

            if (row >= 0) {
                //A cada input se les coloca como valor el del producto que se selecciona
                nameInput.setText(tableProducts.getValueAt(row, 1).toString());
                amountInput.setText(tableProducts.getValueAt(row, 2).toString());
                brandInput.setText(tableProducts.getValueAt(row, 3).toString());
            } else {
                jOptionPane.showMessageDialog(
                        null, "Producto no seleccionado",
                        "Mensaje", JOptionPane.INFORMATION_MESSAGE);
            }

        } catch (Exception e) {
            e.printStackTrace();
            jOptionPane.showMessageDialog(
                    null, "Error en la seleci√≥n del producto",
                    "Mensaje", JOptionPane.INFORMATION_MESSAGE);
        }

    }

    public void updateProductsTable() {
        //Se solicitan los productos de la bd al iniciar 
        products = this.productService.getProducts();
        //Se muestran los productos en la tabla
        showProducts(tableProducts);
    }

    public int selectIdRow() {
        try {
            //Otenecion del id
            //Fila seleccionada
            int row = tableProducts.getSelectedRow();
            //Id
            return (int) tableProducts.getValueAt(row, 0);
        } catch (Exception e) {
            e.printStackTrace();
            jOptionPane.showMessageDialog(
                    null, "Error en la seleci√≥n del producto",
                    "Mensaje", JOptionPane.WARNING_MESSAGE);
        }
        return -1;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField amountInput;
    private javax.swing.JTextField brandInput;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModify;
    private javax.swing.JButton btnSave;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameInput;
    private javax.swing.JTable tableProducts;
    // End of variables declaration//GEN-END:variables

}
